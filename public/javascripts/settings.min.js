let settings={initialise:(void 0,async()=>{let e;try{e=await settings.fetchCustomerDetails()}catch(e){return}if("failed"===e.status)return;const t=e.content;settings.populateEmail(t.account.email),document.getElementById("emailPassword").addEventListener("keypress",e=>{"Enter"===e.key&&settings.changeEmail()}),settings.populateAddress(t.customer.address),document.getElementById("confirmNewPassword").addEventListener("keypress",e=>{"Enter"===e.key&&settings.changePassword()}),settings.populateSubscription(t.customer.subscription.mail),document.getElementById("confirm-removal-password").addEventListener("keypress",e=>{"Enter"===e.key&&settings.deleteAccount()})}),fetchCustomerDetails:(void 0,()=>new Promise(async(e,t)=>{let s;try{s=(await axios.get("/settings/fetch-customer-details")).data}catch(e){return t(e)}return e(s)})),updateSubmit:(void 0,e=>new Promise(async(t,s)=>{let n;try{n=(await axios.post("/settings/update",e)).data}catch(e){return s(e)}return t(n)})),editEmail:(void 0,()=>{document.getElementById("settings-email-container").classList.toggle("settings-active"),document.getElementById("settings-email-error").innerHTML=""}),populateEmail:(void 0,e=>{document.querySelector("#settingEmail").value=e}),changeEmail:(void 0,async()=>{settings.changeEmailDisable();const[e,t]=settings.changeEmailCollect();if(!settings.changeEmailValidate(e,t))return settings.changeEmailEnable();let s;try{s=await settings.changeEmailSubmit(e,t)}catch(e){return document.getElementById("settings-email-error").innerHTML="Failed",void settings.changeEmailEnable()}return"failed"===s.status?(document.getElementById("settings-email-error").innerHTML=s.content,settings.changeEmailEnable()):window.location.href="/verification"}),changeEmailCollect:(void 0,()=>[document.querySelector("#newEmail").value,document.querySelector("#emailPassword").value]),changeEmailValidate:(void 0,(e,t)=>{let s=!0,n="";return t?global.passwordValidity(t)||(s=!1,n="Invalid password"):(s=!1,n="Password required"),e?/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(e).toLowerCase())||(s=!1,errorEmail="Invalid email"):(s=!1,n="Email required"),document.getElementById("settings-email-error").innerHTML=n,s}),changeEmailSubmit:(void 0,(e,t)=>new Promise(async(s,n)=>{let r;try{r=(await axios.post("/settings/change-email",{email:e,password:t})).data}catch(e){return n(e)}return s(r)})),changeEmailEnable:(void 0,()=>{document.querySelector("#settings-email-submit").removeAttribute("disabled"),document.querySelector("#settings-email-cancel").removeAttribute("disabled")}),changeEmailDisable:(void 0,()=>{document.querySelector("#settings-email-submit").setAttribute("disabled",""),document.querySelector("#settings-email-cancel").setAttribute("disabled","")}),editAddress:(void 0,()=>{document.getElementById("settings-address-container").classList.toggle("settings-active"),document.getElementById("settings-email-error").innerHTML="",""===document.querySelector("#addressUnit").getAttribute("disabled")?(document.querySelector("#addressName").removeAttribute("disabled"),document.querySelector("#addressUnit").removeAttribute("disabled"),document.querySelector("#streetNum").removeAttribute("disabled"),document.querySelector("#streetName").removeAttribute("disabled"),document.querySelector("#addressSuburb").removeAttribute("disabled"),document.querySelector("#addressCity").removeAttribute("disabled"),document.querySelector("#postCode").removeAttribute("disabled"),document.querySelector("#addressCountry").removeAttribute("disabled")):(document.querySelector("#addressName").setAttribute("disabled",""),document.querySelector("#addressUnit").setAttribute("disabled",""),document.querySelector("#streetNum").setAttribute("disabled",""),document.querySelector("#streetName").setAttribute("disabled",""),document.querySelector("#addressSuburb").setAttribute("disabled",""),document.querySelector("#addressCity").setAttribute("disabled",""),document.querySelector("#postCode").setAttribute("disabled",""),document.querySelector("#addressCountry").setAttribute("disabled",""))}),populateAddress:(void 0,e=>{document.querySelector("#addressName").value=e.recipient,document.querySelector("#addressUnit").value=e.unit,document.querySelector("#streetNum").value=e.street.number,document.querySelector("#streetName").value=e.street.name,document.querySelector("#addressSuburb").value=e.suburb,document.querySelector("#addressCity").value=e.city,document.querySelector("#postCode").value=e.postcode,document.querySelector("#addressCountry").value=e.country}),changeAddress:(void 0,async()=>{settings.changeAddressDisable();const e=settings.changeAddressCollect();if(!settings.changeAddressValidate(e))return settings.changeAddressEnable();const t={subscription:{mail:void 0},address:e};let s;try{s=await settings.updateSubmit(t)}catch(e){return void settings.changeAddressEnable()}return"failed"===s.status?(document.getElementById("settings-address-error").innerHTML=s.content,settings.changeAddressEnable()):(document.querySelector("#profile-location").innerHTML=`${e.city}, ${e.country}`,notification.popup("Address updated"),settings.changeAddressEnable(),settings.editAddress())}),changeAddressCollect:(void 0,()=>({recipient:document.querySelector("#addressName").value,unit:document.querySelector("#addressUnit").value,street:{number:document.querySelector("#streetNum").value,name:document.querySelector("#streetName").value},suburb:document.querySelector("#addressSuburb").value,city:document.querySelector("#addressCity").value,postcode:document.querySelector("#postCode").value,country:document.querySelector("#addressCountry").value})),changeAddressValidate:(void 0,e=>{let t=!0,s="";return e.street.number||(t=!1,s="Street number required"),e.street.name||(t=!1,s="Street name required"),e.suburb||(t=!1,s="Suburb required"),e.city||(t=!1,s="City required"),e.postcode||(t=!1,s="Postcode required"),e.country||(t=!0,s=""),document.getElementById("settings-address-error").innerHTML=s,t}),changeAddressEnable:(void 0,()=>{document.querySelector("#settings-address-submit").removeAttribute("disabled"),document.querySelector("#settings-address-cancel").removeAttribute("disabled")}),changeAddressDisable:(void 0,()=>{document.querySelector("#settings-address-submit").setAttribute("disabled",""),document.querySelector("#settings-address-cancel").setAttribute("disabled","")}),editPassword:(void 0,()=>{document.getElementById("settings-pass-container").classList.toggle("settings-active")}),changePassword:(void 0,async()=>{settings.changePasswordDisable();const[e,t,s]=settings.changePasswordCollect();if(!settings.changePasswordValidate(e,t,s))return settings.changePasswordEnable();let n;try{n=await settings.changePasswordSubmit(e,s)}catch(e){return settings.changePasswordEnable()}return"failed"===n.status?(document.getElementById("settings-pass-error").innerHTML=n.content,settings.changePasswordEnable()):(notification.popup("Password updated"),settings.changePasswordClear(),settings.changePasswordEnable(),settings.editPassword())}),changePasswordCollect:(void 0,()=>[document.querySelector("#newPassword").value,document.querySelector("#confirmNewPassword").value,document.querySelector("#oldPassword").value]),changePasswordValidate:(void 0,(e,t,s)=>{let n=!0,r="";return t||(n=!1,r="Confirm new password required"),e?global.passwordValidity(e)||(n=!1,r="Password is too weak"):(n=!1,r="New password required"),e!==t&&(n=!1,r="New password does not match"),s||(n=!1,r="Password required"),document.getElementById("settings-pass-error").innerHTML=r,n}),changePasswordSubmit:(void 0,(e,t)=>new Promise(async(s,n)=>{let r;try{r=(await axios.post("/settings/change-password",{newPassword:e,password:t})).data}catch(e){return n(e)}return s(r)})),changePasswordClear:(void 0,()=>{document.querySelector("#newPassword").value="",document.querySelector("#confirmNewPassword").value="",document.querySelector("#oldPassword").value=""}),changePasswordEnable:(void 0,()=>{document.querySelector("#settings-password-submit").removeAttribute("disabled"),document.querySelector("#settings-password-cancel").removeAttribute("disabled")}),changePasswordDisable:(void 0,()=>{document.querySelector("#settings-password-submit").setAttribute("disabled",""),document.querySelector("#settings-password-cancel").setAttribute("disabled","")}),populateSubscription:(void 0,e=>{document.querySelector("#settings-subscription-input").checked=e,e?(document.getElementById("settings-sub-status").innerHTML="Subscribed",document.getElementById("settings-sub-status").classList.add("settings-subbed")):(document.getElementById("settings-sub-status").innerHTML="Subscribe",document.getElementById("settings-sub-status").classList.add("settings-not-subbed"))}),changeSubscription:(void 0,async()=>{settings.changeSubscriptionDisable();const e=settings.changeSubscriptionCollect();if(!settings.changeSubscriptionValidate(e))return settings.changeSubscriptionEnable();const t={subscription:{mail:e},address:void 0};let s,n;try{s=await settings.updateSubmit(t)}catch(e){return settings.changeSubscriptionEnable()}return"failed"===s.status?(document.getElementById("settings-sub-error").innerHTML=s.content,settings.changeSubscriptionEnable()):(e?(n="Subscribed successfully",document.getElementById("settings-sub-status").innerHTML="Subscribed",document.getElementById("settings-sub-status").classList.toggle("settings-subbed"),document.getElementById("settings-sub-status").classList.toggle("settings-not-subbed")):(n="Unsubscribed successfully",document.getElementById("settings-sub-status").innerHTML="Subscribe",document.getElementById("settings-sub-status").classList.toggle("settings-subbed"),document.getElementById("settings-sub-status").classList.toggle("settings-not-subbed")),notification.popup(n),settings.changeSubscriptionEnable())}),changeSubscriptionCollect:(void 0,()=>document.querySelector("#settings-subscription-input").checked),changeSubscriptionValidate:(void 0,e=>{let t=!0,s="";return void 0===e&&(t=!1,s="Subscription required"),document.getElementById("settings-sub-error").innerHTML=s,t}),changeSubscriptionEnable:(void 0,()=>{document.querySelector("#settings-subscription-input").removeAttribute("disabled")}),changeSubscriptionDisable:(void 0,()=>{document.querySelector("#settings-subscription-input").setAttribute("disabled","")}),deleteAccountConfirmation:(void 0,()=>{document.getElementById("settings-delete-container").classList.toggle("settings-active"),document.getElementById("settings-delete-message").classList.toggle("active"),document.getElementById("settings-delete-error").innerHTML=""}),deleteAccountCancel:(void 0,()=>{document.getElementById("settings-delete-container").classList.toggle("settings-active"),document.getElementById("settings-delete-error").innerHTML=""}),deleteAccount:(void 0,async()=>{settings.deleteAccountDisable();const e=settings.deleteAccountCollect();if(!settings.deleteAccountValidate(e))return settings.deleteAccountEnable();let t;try{t=await settings.deleteAccountSubmit(e)}catch(e){return settings.deleteAccountEnable()}return"failed"===t.status?(document.getElementById("settings-delete-error").innerHTML=t.content,settings.deleteAccountEnable()):window.location.href="/logout"}),deleteAccountCollect:(void 0,()=>document.querySelector("#confirm-removal-password").value),deleteAccountValidate:(void 0,e=>{let t=!0,s="";return e?global.passwordValidity(e)||(t=!1,s="Invalid password"):(t=!1,s="Password required"),document.getElementById("settings-delete-error").innerHTML=s,t}),deleteAccountSubmit:(void 0,e=>new Promise(async(t,s)=>{let n;try{n=(await axios.post("/settings/delete-account",{password:e})).data}catch(e){return s(e)}return t(n)})),deleteAccountEnable:(void 0,()=>{document.getElementById("settings-password-submit").removeAttribute("disabled"),document.getElementById("settings-password-cancel").removeAttribute("disabled")}),deleteAccountDisable:(void 0,()=>{document.getElementById("settings-password-submit").setAttribute("disabled",""),document.getElementById("settings-password-cancel").setAttribute("disabled","")})};